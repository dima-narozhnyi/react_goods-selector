{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGoodToBusket","good","setState","removeGoodFromBasket","basketAfterRemoving","filter","item","showBasket","basket","length","firstGroupOfGoods","slice","lastAddedGood","join","clearBasket","getModifier","toLocaleLowerCase","split","this","basketInfo","isBasketEmpty","className","type","onClick","map","isGoodInBasket","includes","classNames","href","title","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,cAAe,CAAC,QAFpB,EAKEC,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACJ,GAAD,MAAmB,CAC/BC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,SAP9C,EAWEE,qBAAuB,SAACF,GACtB,IACMG,EADoB,EAAKN,MAAvBC,cACkCM,QAAO,SAAAC,GAAI,OAAIA,IAASL,KAElE,EAAKC,SAAS,CAAEH,cAAeK,KAfnC,EAkBEG,WAAa,WACX,IAAQR,EAAkB,EAAKD,MAAvBC,cACJS,EAAS,GAEb,GAA6B,IAAzBT,EAAcU,OAChB,MAAO,oBAGT,GAA6B,IAAzBV,EAAcU,OAChBD,EAAM,UAAMT,EAAc,GAApB,oBACD,CACL,IAAMW,EAAoBX,EAAcY,MAAM,GAAI,GAC5CC,EAAgBb,EAAcA,EAAcU,OAAS,GAE3DD,EAAS,UAAGE,EAAkBG,KAAK,MAA1B,mBACED,EADF,iBAIX,OAAOJ,GApCX,EAuCEM,YAAc,WACZ,EAAKZ,SAAS,CAAEH,cAAe,MAxCnC,EA2CEgB,YAAc,SAACd,GACb,OAAOA,EAAKe,oBAAoBC,MAAM,KAAKJ,KAAK,KA5CpD,4CA+CE,WAAU,IAAD,OACCd,EAAkBmB,KAAKpB,MAAvBC,cACFoB,EAAaD,KAAKX,aAClBa,EAAkD,IAAzBrB,EAAcU,OAE7C,OACE,sBAAKY,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGF,KAEDC,GACA,qBAAKC,UAAU,iBAAf,SACE,wBACEA,UAAU,uBACVC,KAAK,SACLC,QAASL,KAAKJ,YAHhB,qBAUJ,oBAAIO,UAAU,aAAd,SACGzB,EAAgB4B,KAAI,SAAAvB,GACnB,IAAMwB,EAAiB1B,EAAc2B,SAASzB,GAE9C,OACE,qBACEoB,UAAWM,IAAW,CACpB,oBAAoB,EACpB,gCAAiCF,EACjC,kCAAmCA,IAJvC,UAQE,oBAAIJ,UAAU,wBAAd,SAAuCpB,IACvC,qBAAKoB,UAAS,yDAAoD,EAAKN,YAAYd,MACnF,wBACEoB,UAAWM,IAAW,CACpB,wBAAyBF,EACzB,sBAAuBA,IAEzBH,KAAK,SACLC,QAAS,WACHE,EACF,EAAKtB,qBAAqBF,GAE1B,EAAKD,gBAAgBC,IAV3B,SAcGwB,EACG,SACA,UApBDxB,QA0Bb,sBAAKoB,UAAU,QAAf,+BAEE,mBAAGA,UAAU,cAAcO,KAAK,0BAA0BC,MAAM,UAAhE,qBAFF,iBAKE,mBAAGR,UAAU,cAAcO,KAAK,4BAA4BC,MAAM,WAAlE,wCA/GV,GAAyBC,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.66808589.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[]\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGoodToBusket = (good: string) => {\n    this.setState((state: State) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  removeGoodFromBasket = (good: string) => {\n    const { selectedGoods } = this.state;\n    const basketAfterRemoving = selectedGoods.filter(item => item !== good);\n\n    this.setState({ selectedGoods: basketAfterRemoving });\n  };\n\n  showBasket = () => {\n    const { selectedGoods } = this.state;\n    let basket = '';\n\n    if (selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      basket = `${selectedGoods[0]} is selected`;\n    } else {\n      const firstGroupOfGoods = selectedGoods.slice(0, -1);\n      const lastAddedGood = selectedGoods[selectedGoods.length - 1];\n\n      basket = `${firstGroupOfGoods.join(', ')} `\n        + `and ${lastAddedGood} are selected`;\n    }\n\n    return basket;\n  };\n\n  clearBasket = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  getModifier = (good: string) => {\n    return good.toLocaleLowerCase().split(' ').join('');\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const basketInfo = this.showBasket();\n    const isBasketEmpty: boolean = selectedGoods.length === 0;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {basketInfo}\n        </h1>\n        {!isBasketEmpty && (\n          <div className=\"wrapper-button\">\n            <button\n              className=\"button button--clear\"\n              type=\"button\"\n              onClick={this.clearBasket}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n\n        <ul className=\"goods-list\">\n          {goodsFromServer.map(good => {\n            const isGoodInBasket = selectedGoods.includes(good);\n\n            return (\n              <li\n                className={classNames({\n                  'goods-list__item': true,\n                  'goods-list__item--theme-green': isGoodInBasket,\n                  'goods-list__item--theme-salmon': !isGoodInBasket,\n                })}\n                key={good}\n              >\n                <h2 className=\"goods-list__item-name\">{good}</h2>\n                <div className={`goods-list__item-image goods-list__item-image--${this.getModifier(good)}`} />\n                <button\n                  className={classNames({\n                    'button button--remove': isGoodInBasket,\n                    'button button--add': !isGoodInBasket,\n                  })}\n                  type=\"button\"\n                  onClick={() => {\n                    if (isGoodInBasket) {\n                      this.removeGoodFromBasket(good);\n                    } else {\n                      this.addGoodToBusket(good);\n                    }\n                  }}\n                >\n                  {isGoodInBasket\n                    ? 'Remove'\n                    : 'Add'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"icons\">\n          Icons made by &nbsp;\n          <a className=\"icons__link\" href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a>\n          &nbsp;\n          from &nbsp;\n          <a className=\"icons__link\" href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}